// Mocks generated by Mockito 5.1.0 from annotations
// in eshop/test/app/infrastructure/repositories/auth_repository_test.dart.
// Do not manually edit this file.

import 'dart:async' as _i4;

import 'package:dartz/dartz.dart' as _i2;
import 'package:eshop/commen/util/connectivity/network_info.dart' as _i3;
import 'package:eshop/commen/util/exception/auth_failures.dart' as _i6;
import 'package:eshop/commen/util/exception/signup_failures.dart' as _i8;
import 'package:eshop/features/auth/domain/entities/utilisateur.dart' as _i7;
import 'package:eshop/features/auth/infrastructure/data_sources/appwrite_datasource.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types

class _FakeEither_0<L, R> extends _i1.Fake implements _i2.Either<L, R> {}

/// A class which mocks [NetworkInfoImpl].
///
/// See the documentation for Mockito's code generation for more information.
class MockNetworkInfoImpl extends _i1.Mock implements _i3.NetworkInfoImpl {
  MockNetworkInfoImpl() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<bool> get isConnected =>
      (super.noSuchMethod(Invocation.getter(#isConnected),
          returnValue: Future<bool>.value(false)) as _i4.Future<bool>);
}

/// A class which mocks [AppwriteDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockAppwriteDataSource extends _i1.Mock
    implements _i5.AppwriteDataSource {
  MockAppwriteDataSource() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<_i2.Either<_i6.AuthentificationFailure, _i7.Utilisateur>>
      signInWithEmailAndPassword(String? email, String? password) => (super
          .noSuchMethod(
              Invocation.method(#signInWithEmailAndPassword, [email, password]),
              returnValue:
                  Future<_i2.Either<_i6.AuthentificationFailure, _i7.Utilisateur>>.value(
                      _FakeEither_0<_i6.AuthentificationFailure, _i7.Utilisateur>())) as _i4
          .Future<_i2.Either<_i6.AuthentificationFailure, _i7.Utilisateur>>);
  @override
  _i4.Future<_i2.Either<_i8.SignUpFailure, _i7.Utilisateur>> signUp(
          String? email, String? password, String? name) =>
      (super.noSuchMethod(Invocation.method(#signUp, [email, password, name]),
              returnValue:
                  Future<_i2.Either<_i8.SignUpFailure, _i7.Utilisateur>>.value(
                      _FakeEither_0<_i8.SignUpFailure, _i7.Utilisateur>()))
          as _i4.Future<_i2.Either<_i8.SignUpFailure, _i7.Utilisateur>>);
  @override
  _i4.Future<dynamic> pingCheeck() =>
      (super.noSuchMethod(Invocation.method(#pingCheeck, []),
          returnValue: Future<dynamic>.value()) as _i4.Future<dynamic>);
}
